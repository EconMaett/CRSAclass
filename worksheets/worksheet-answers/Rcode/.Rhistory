plot(AirPassengers)
x <- 1:length(AirPassengers)
fit <- lm(AirPassengers~x)
abline(fit, col=2)
abline(fit~time(AirPassengers), col=2)
abline(fitted.values(fit)~time(AirPassengers), col=2)
fitted.values(fit)
time(AirPassengers)
lines(time(AirPassengers), fitted.values(fit), col=2)
lines(x = time(AirPassengers), y = fitted.values(fit))
class(time(AirPassengers))
tt <- as.numeric(time(AirPassengers))
lines(x = tt, y = fitted.values(fit))
plot.ts(residuals(fit))
install.packages("seasonal")
library(seasonal)
install.packages("seasonal")
library(seasonal)
# seas() is the core function of the seasonal package.
# By default, seas() calls the automatic procedures of X-13ARIMA-SEATS to perform
# a seasonal adjustment that works well in most circumstances.
m <- seas(AirPassengers)
# The first argument is a time series of class "ts".
class(AirPassengers) # "ts"
class(m) # "seas"
# The final() function returns the adjusted series:
final(m)
# The plot() method shows a plot with the unadjusted and the adjusted series:
plot(m, trend = TRUE)
# The summary() method allows you to display an overview of the model:
summary(m)
plot(m, trend = FALSE)
# By default, seas() calls the SEATS adjustment procedure.
# If you prefer the X11 adjustment procedure, use:
seas(AirPassengers, x11 = list())
# By default, seas() calls the SEATS adjustment procedure.
# If you prefer the X11 adjustment procedure, use:
seas(AirPassengers, x11 = "")
# Alternatively, all inputs may be entered manually:
seas(x = AirPassengers,
regression.variables = c("td1coef", "easter[1]", "ao1951.May"),
arima.model = "(0 1 1)(0 1 1)",
regression.aictest = NULL,
outlier = NULL,
transform.function = "log")
# The static() command reveals the static call from above that is needed to
# replicate the automatic seasonal adjustment procedure:
static(m)
# no test for Easter effects, only trading day effects
seas(AirPassengers, regression.aictest = c("td"))
# force equality of annual values
seas(AirPassengers, force.type = "denton")
# all series from X-13 can be extracted with series()
ts.plot(series(x = m, series = "forecast.forecasts"))
# use genhol to generate user defined holiday variables:
data(seasonal) # exports and imports of China
data(holiday) # dates of Chinese New Year and Easter
cny.ts <- genhol(cny, start = 0, end = 6, center = "calendar")
cny.ts
# the series can be used as a user defined regressor
plot(cny.ts)
seas(imp,
xreg = cny.ts,
regression.usertype = "holiday",
x11 = "",
regression.variables = c("td1coef", "ls1985.Jan", "ls2008.Nov"),
arima.model = "(0 1 2)(0 1 1)",
regression.aictest = NULL,
outlier = NULL,
transform.function = "log")
## Getting started ----
# seas() is the core function of the seasonal package.
# seas() calls the automatic procedures of X-13ARIMA-SEATS
m <- seas(AirPassengers)
# There are several methods for "seas" objects:
# final() returns the adjusted series.
# plot() shows the adjusted and unadjusted series.
# summary() provides an overview of the model.
final(m)
plot(m)
summary(m)
# translates to R:
seas(AirPassengers,
x11 = "",
arima.model = "(0 1 1)"
)
# The plot() method draws the seasonally adjusted and the unadjusted series,
# as well as outliers.
m <- seas(AirPassengers, regression.aictest = c("td", "easter"))
plot(m)
# Optionally, add the trend:
plot(m, trend = TRUE)
# The monthplot() method allows for a monthwise
# or a quarterwise plot of the seasonal
# component and the SI component:
monthplot(m)
monthplot(m, choice = "irregular")
# Many standard R functions can be used
# to analyze a "seas" object:
pacf(resid(m))
spectrum(diff(resid(m)))
plot(density(resid(m)))
qqnorm(resid(m))
# In order to adjust Indian industrial production for Diwali effects:
# variables included in seasonal:
# iip: Indian industrial production
# cny, diwali, easter: dates of Chinese New Year, Indian Diwali and Easter
seas(iip,
x11 = "",
xreg = genhol(diwali, start = 0, end = 0, center = "calendar"),
regression.usertype = "holiday")
# modeling complex holiday effects in Chinese imports
# - positive pre-CNY effect
# - negative post-CNY effect
pre_cny  <- genhol(x = cny, start = -6, end = -1, frequency = 12, center = "calendar")
post_cny <- genhol(x = cny, start =  0, end =  6, frequency = 12, center = "calendar")
m3 <- seas(x = imp, x11 = "",
xreg = cbind(pre_cny, post_cny), regression.usertype = "holiday",
x11 = list())
summary(m3)
ts.plot(final(m1), final(m2), final(m3), col = c("red", "blue", "black"))
# de facto holiday length is longer :)
cny.ts <- genhol(x = cny, start = 0, end = 6, center = "calendar")
m1 <- seas(x = imp, xreg = cny.ts, regression.usertype = "holiday", x11 = "",
regression.variables = c("td1coef", "ls1985.Jan", "ls2008.Nov"),
arima.model = "(0 1 2)(0 1 1)", regression.aictest = NULL,
outlier = NULL, transform.function = "log")
summary(m1)
# compare to identical no-CNY model
m2 <- seas(x = imp, x11 = "",
regression.variables = c("td1coef", "ls1985.Jan", "ls2008.Nov"),
arima.model = "(0 1 2)(0 1 1)", regression.aictest = NULL,
outlier = NULL, transform.function = "log")
summary(m2)
ts.plot(final(m1), final(m2), col = c("red", "black"))
# modeling complex holiday effects in Chinese imports
# - positive pre-CNY effect
# - negative post-CNY effect
pre_cny  <- genhol(x = cny, start = -6, end = -1, frequency = 12, center = "calendar")
post_cny <- genhol(x = cny, start =  0, end =  6, frequency = 12, center = "calendar")
m3 <- seas(x = imp, x11 = "",
xreg = cbind(pre_cny, post_cny), regression.usertype = "holiday",
x11 = list())
summary(m3)
ts.plot(final(m1), final(m2), final(m3), col = c("red", "blue", "black"))
# adjusting Indian industrial production
m4 <- seas(x = iip, x11 = "",
xreg = genhol(x = diwali, start = 0, end = 0, center = "calendar"),
regression.usertype = "holiday")
summary(m4)
ts.plot(iip, final(m4), col = c("black", "red"))
# without specification of 'regression.usertype', Diwali effects are
# added back to the final series
m5 <- seas(x = iip, x11 = "", xreg = genhol(x = diwali, start = 0, end = 0, center = "calendar"))
ts.plot(final(m4), final(m5), col = c("red", "black"))
ts.plot(final(m4), final(m5), col = c("red", "black"))
# plot the Diwali factor in Indian industrial production
plot(series(x = m4, series = "regression.holiday"))
# Easter regressor
ea <- genhol(x = easter, start = -1, end = -1, center = "calendar")
ea <- window(ea, start = start(AirPassengers), end = end(AirPassengers))
# estimating ARIMA model in base R
arima(x = log(AirPassengers),
order = c(0, 1, 1),
seasonal = c(0, 1, 1),
xreg = ea)
summary(seas(AirPassengers, regression.variables = c("easter[1]"),
regression.aictest = NULL))
# two different models for two different time series
m1 <- seas(x = fdeaths, x11 = "")
m2 <- seas(x = mdeaths, x11 = "")
l <- list()
l$c1 <- static(m1) # static call (with automated procedures substituted)
l$c2 <- m2$call # original call
bookdata <- import.ts(file = "data/retail/Book stores.dat", format = "datevalue")
